import QtQuick.tooling 1.1

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QtQuick.Particles 2.0'

Module {
    Component {
        name: "QQuickAgeAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/Age 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "lifeLeft"; type: "int" }
        Property { name: "advancePosition"; type: "bool" }
        Signal {
            name: "lifeLeftChanged"
            Parameter { name: "arg"; type: "int" }
        }
        Signal {
            name: "advancePositionChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setLifeLeft"
            Parameter { name: "arg"; type: "int" }
        }
        Method {
            name: "setAdvancePosition"
            Parameter { name: "arg"; type: "bool" }
        }
    }
    Component {
        name: "QQuickAngleDirection"
        prototype: "QQuickDirection"
        exports: ["QtQuick.Particles/AngleDirection 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "angle"; type: "double" }
        Property { name: "magnitude"; type: "double" }
        Property { name: "angleVariation"; type: "double" }
        Property { name: "magnitudeVariation"; type: "double" }
        Signal {
            name: "angleChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "magnitudeChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "angleVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "magnitudeVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAngle"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setMagnitude"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAngleVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setMagnitudeVariation"
            Parameter { name: "arg"; type: "double" }
        }
    }
    Component {
        name: "QQuickAttractorAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/Attractor 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Proportion"
            values: {
                "Constant": 0,
                "Linear": 1,
                "Quadratic": 2,
                "InverseLinear": 3,
                "InverseQuadratic": 4
            }
        }
        Enum {
            name: "AffectableParameters"
            values: {
                "Position": 0,
                "Velocity": 1,
                "Acceleration": 2
            }
        }
        Property { name: "strength"; type: "double" }
        Property { name: "pointX"; type: "double" }
        Property { name: "pointY"; type: "double" }
        Property { name: "affectedParameter"; type: "AffectableParameters" }
        Property { name: "proportionalToDistance"; type: "Proportion" }
        Signal {
            name: "strengthChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "pointXChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "pointYChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "affectedParameterChanged"
            Parameter { name: "arg"; type: "AffectableParameters" }
        }
        Signal {
            name: "proportionalToDistanceChanged"
            Parameter { name: "arg"; type: "Proportion" }
        }
        Method {
            name: "setStrength"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setPointX"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setPointY"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAffectedParameter"
            Parameter { name: "arg"; type: "AffectableParameters" }
        }
        Method {
            name: "setProportionalToDistance"
            Parameter { name: "arg"; type: "Proportion" }
        }
    }
    Component {
        name: "QQuickCumulativeDirection"
        defaultProperty: "directions"
        prototype: "QQuickDirection"
        exports: ["QtQuick.Particles/CumulativeDirection 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "directions"; type: "QQuickDirection"; isList: true; isReadonly: true }
    }
    Component {
        name: "QQuickCustomAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/Affector 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "relative"; type: "bool" }
        Property { name: "position"; type: "QQuickDirection"; isPointer: true }
        Property { name: "velocity"; type: "QQuickDirection"; isPointer: true }
        Property { name: "acceleration"; type: "QQuickDirection"; isPointer: true }
        Signal {
            name: "affectParticles"
            Parameter { name: "particles"; type: "QQmlV4Handle" }
            Parameter { name: "dt"; type: "double" }
        }
        Signal {
            name: "positionChanged"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Signal {
            name: "velocityChanged"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Signal {
            name: "accelerationChanged"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Signal {
            name: "relativeChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setPosition"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Method {
            name: "setVelocity"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Method {
            name: "setAcceleration"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Method {
            name: "setRelative"
            Parameter { name: "arg"; type: "bool" }
        }
    }
    Component {
        name: "QQuickCustomParticle"
        defaultProperty: "data"
        prototype: "QQuickParticlePainter"
        exports: ["QtQuick.Particles/CustomParticle 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "fragmentShader"; type: "QByteArray" }
        Property { name: "vertexShader"; type: "QByteArray" }
    }
    Component {
        name: "QQuickDirection"
        prototype: "QObject"
        exports: ["QtQuick.Particles/NullVector 2.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "QQuickEllipseExtruder"
        prototype: "QQuickParticleExtruder"
        exports: ["QtQuick.Particles/EllipseShape 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "fill"; type: "bool" }
        Signal {
            name: "fillChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setFill"
            Parameter { name: "arg"; type: "bool" }
        }
    }
    Component {
        name: "QQuickFrictionAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/Friction 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "factor"; type: "double" }
        Property { name: "threshold"; type: "double" }
        Signal {
            name: "factorChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "thresholdChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setFactor"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setThreshold"
            Parameter { name: "arg"; type: "double" }
        }
    }
    Component {
        name: "QQuickGravityAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/Gravity 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "magnitude"; type: "double" }
        Property { name: "acceleration"; type: "double" }
        Property { name: "angle"; type: "double" }
        Signal {
            name: "magnitudeChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "angleChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAcceleration"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setMagnitude"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAngle"
            Parameter { name: "arg"; type: "double" }
        }
    }
    Component {
        name: "QQuickGroupGoalAffector"
        defaultProperty: "data"
        prototype: "QQuickParticleAffector"
        exports: ["QtQuick.Particles/GroupGoal 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "goalState"; type: "string" }
        Property { name: "jump"; type: "bool" }
        Signal {
            name: "goalStateChanged"
            Parameter { name: "arg"; type: "string" }
        }
        Signal {
            name: "jumpChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setGoalState"
            Parameter { name: "arg"; type: "string" }
        }
        Method {
            name: "setJump"
            Parameter { name: "arg"; type: "bool" }
        }
    }
    Component {
        name: "QQuickImageParticle"
        defaultProperty: "data"
        prototype: "QQuickParticlePainter"
        exports: ["QtQuick.Particles/ImageParticle 2.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Status"
            values: {
                "Null": 0,
                "Ready": 1,
                "Loading": 2,
                "Error": 3
            }
        }
        Enum {
            name: "EntryEffect"
            values: {
                "None": 0,
                "Fade": 1,
                "Scale": 2
            }
        }
        Property { name: "source"; type: "QUrl" }
        Property { name: "sprites"; type: "QQuickSprite"; isList: true; isReadonly: true }
        Property { name: "status"; type: "Status"; isReadonly: true }
        Property { name: "colorTable"; type: "QUrl" }
        Property { name: "sizeTable"; type: "QUrl" }
        Property { name: "opacityTable"; type: "QUrl" }
        Property { name: "color"; type: "QColor" }
        Property { name: "colorVariation"; type: "double" }
        Property { name: "redVariation"; type: "double" }
        Property { name: "greenVariation"; type: "double" }
        Property { name: "blueVariation"; type: "double" }
        Property { name: "alpha"; type: "double" }
        Property { name: "alphaVariation"; type: "double" }
        Property { name: "rotation"; type: "double" }
        Property { name: "rotationVariation"; type: "double" }
        Property { name: "rotationVelocity"; type: "double" }
        Property { name: "rotationVelocityVariation"; type: "double" }
        Property { name: "autoRotation"; type: "bool" }
        Property { name: "xVector"; type: "QQuickDirection"; isPointer: true }
        Property { name: "yVector"; type: "QQuickDirection"; isPointer: true }
        Property { name: "spritesInterpolate"; type: "bool" }
        Property { name: "entryEffect"; type: "EntryEffect" }
        Signal { name: "imageChanged" }
        Signal { name: "colortableChanged" }
        Signal { name: "sizetableChanged" }
        Signal { name: "opacitytableChanged" }
        Signal {
            name: "alphaVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "alphaChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "redVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "greenVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "blueVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "rotationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "rotationVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "rotationVelocityChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "rotationVelocityVariationChanged"
            Parameter { name: "arg"; type: "double" }
        }
        Signal {
            name: "autoRotationChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "xVectorChanged"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Signal {
            name: "yVectorChanged"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Signal {
            name: "spritesInterpolateChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "bypassOptimizationsChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Signal {
            name: "entryEffectChanged"
            Parameter { name: "arg"; type: "EntryEffect" }
        }
        Signal {
            name: "statusChanged"
            Parameter { name: "arg"; type: "Status" }
        }
        Method {
            name: "reloadColor"
            Parameter { name: "c"; type: "Color4ub" }
            Parameter { name: "d"; type: "QQuickParticleData"; isPointer: true }
        }
        Method {
            name: "setAlphaVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAlpha"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setRedVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setGreenVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setBlueVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setRotation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setRotationVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setRotationVelocity"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setRotationVelocityVariation"
            Parameter { name: "arg"; type: "double" }
        }
        Method {
            name: "setAutoRotation"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setXVector"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Method {
            name: "setYVector"
            Parameter { name: "arg"; type: "QQuickDirection"; isPointer: true }
        }
        Method {
            name: "setSpritesInterpolate"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setBypassOptimizations"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setEntryEffect"
            Parameter { name: "arg"; type: "EntryEffect" }
        }
    }
    Component {
        name: "QQuickItemParticle"
        defaultProperty: "data"
        prototype: "QQuickParticlePainter"
        exports: ["QtQuick.Particles/ItemParticle 2.0"]
        exportMetaObjectRevisions: [0]
        attachedType: "QQuickItemParticleAttached"
        Property { name: "fade"; type: "bool" }
        Property { name: "delegate"; type: "QQmlComponent"; isPointer: true }
        Signal {
            name: "delegateChanged"
            Parameter { name: "arg"; type: "QQmlComponent"; isPointer: true }
        }
        Method {
            name: "freeze"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "unfreeze"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "take"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
            Parameter { name: "prioritize"; type: "bool" }
        }
        Method {
            name: "take"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "give"
            Parameter { name: "item"; type: "QQuickItem"; isPointer: true }
        }
        Method {
            name: "setFade"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setDelegate"
            Parameter { name: "arg"; type: "QQmlComponent"; isPointer: true }
        }
    }
    Component {
        name: "QQuickItemParticleAttached"
        prototype: "QObject"
        Property { name: "particle"; type: "QQuickItemParticle"; isReadonly: true; isPointer: true }
        Signal { name: "detached" }
        Signal { name: "attached" }
    }
    Component {
        name: "QQuickLineExtruder"
        prototype: "QQuickParticleExtruder"
        exports: ["QtQuick.Particles/LineShape 2.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "mirrored"; type: "bool" }
        Signal {
            name: "mirroredChanged"
            Parameter { name: "arg"; type: "bool" }
        }
        Method {
            name: "setmirrored"
            Parameter { name: "arg"; type: "bool" }
        }
    }
    Component {
        name: "QQuickMaskExtruder"
        prototype: "QQuickParticleExtruder"